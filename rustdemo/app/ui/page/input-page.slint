import { LineEdit } from "std-widgets.slint";

export component InputPage inherits Window {
    width: 270px;
    preferred-height: 100px;

    VerticalLayout {
        TextInput {
            text: "11111Replace me with a name";
        }

        text1 := Text {
            text: "Hello World";
            color: red;
        }

        Text {
            x:0;
            text: "This paragraph breaks into multiple lines of text";
            wrap: word-wrap;
            width: 150px;
        }
        TextInput {
            text: "22222Replace me with a name";
        }

        Rectangle {
            width: 200px;
            height: 100px;
            area := TouchArea {
                width: parent.width;
                height: parent.height;
                clicked => {
                    rect2.background = #ff0;
                }
                moved => {
                    
                }
                // pointer-event => {
                //     // text1.text = 
                // }
            }
            Rectangle {
                x:0;
                width: parent.width / 2;
                height: parent.height;
                background: area.pressed ? blue: red;
            }
            rect2 := Rectangle {
                x: parent.width / 2;
                width: parent.width / 2;
                height: parent.height;
            }
        }

        HorizontalLayout {
            spacing: 5px;
            height: 100px;
            Rectangle { background: red; width: 10px; }
            Rectangle { background: blue; min-width: 10px; }
            Rectangle { background: yellow; horizontal-stretch: 1; }
            Rectangle { background: green; horizontal-stretch: 2; }
        }

        // animation-tick() 动画时间值
        Rectangle {
            width: 100px;
            height: 100px;

            Rectangle {
                y:0;
                background: red;
                height: 50px;
                width: parent.width * mod(animation-tick(), 2s) / 2s;
            }
        
            Rectangle {
                background: blue;
                height: 50px;
                y: 50px;
                width: parent.width * abs(sin(360deg * animation-tick() / 3s));
            }
        }

        Rectangle {
            height: 100px;

            VerticalLayout {
                LineEdit {}
                FocusScope {}
                if TextInputInterface.text-input-focused: Rectangle { background: yellow; }
            }
        }
    }
}